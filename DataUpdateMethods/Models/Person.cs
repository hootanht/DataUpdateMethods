// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DataUpdateMethods.Models;

/// <summary>
/// Represents a person in the application schema.
/// </summary>
[Table("People", Schema = "Application")]
[Index("FullName", Name = "IX_Application_People_FullName")]
[Index("IsEmployee", Name = "IX_Application_People_IsEmployee")]
[Index("IsSalesperson", Name = "IX_Application_People_IsSalesperson")]
[Index("IsPermittedToLogon", "PersonId", Name = "IX_Application_People_Perf_20160301_05")]
public partial class Person
{
    [Key]
    [Column("PersonID")]
    public int PersonId { get; set; }

    [Required]
    [StringLength(50)]
    public string FullName { get; set; }

    [Required]
    [StringLength(50)]
    public string PreferredName { get; set; }

    [Required]
    [StringLength(101)]
    public string SearchName { get; set; }

    public bool IsPermittedToLogon { get; set; }

    [StringLength(50)]
    public string LogonName { get; set; }

    public bool IsExternalLogonProvider { get; set; }

    public byte[] HashedPassword { get; set; }

    public bool IsSystemUser { get; set; }

    public bool IsEmployee { get; set; }

    public bool IsSalesperson { get; set; }

    public string UserPreferences { get; set; }

    [StringLength(20)]
    public string PhoneNumber { get; set; }

    [StringLength(20)]
    public string FaxNumber { get; set; }

    [StringLength(256)]
    public string EmailAddress { get; set; }

    public byte[] Photo { get; set; }

    public string CustomFields { get; set; }

    public string OtherLanguages { get; set; }

    public int LastEditedBy { get; set; }

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<BuyingGroup> BuyingGroups { get; set; } = new List<BuyingGroup>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<City> Cities { get; set; } = new List<City>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<Color> Colors { get; set; } = new List<Color>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<Country> Countries { get; set; } = new List<Country>();

    [InverseProperty("AlternateContactPerson")]
    public virtual ICollection<Customer> CustomerAlternateContactPeople { get; set; } = new List<Customer>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<CustomerCategory> CustomerCategories { get; set; } = new List<CustomerCategory>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<Customer> CustomerLastEditedByNavigations { get; set; } = new List<Customer>();

    [InverseProperty("PrimaryContactPerson")]
    public virtual ICollection<Customer> CustomerPrimaryContactPeople { get; set; } = new List<Customer>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<CustomerTransaction> CustomerTransactions { get; set; } = new List<CustomerTransaction>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<DeliveryMethod> DeliveryMethods { get; set; } = new List<DeliveryMethod>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<Person> InverseLastEditedByNavigation { get; set; } = new List<Person>();

    [InverseProperty("AccountsPerson")]
    public virtual ICollection<Invoice> InvoiceAccountsPeople { get; set; } = new List<Invoice>();

    [InverseProperty("ContactPerson")]
    public virtual ICollection<Invoice> InvoiceContactPeople { get; set; } = new List<Invoice>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<Invoice> InvoiceLastEditedByNavigations { get; set; } = new List<Invoice>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<InvoiceLine> InvoiceLines { get; set; } = new List<InvoiceLine>();

    [InverseProperty("PackedByPerson")]
    public virtual ICollection<Invoice> InvoicePackedByPeople { get; set; } = new List<Invoice>();

    [InverseProperty("SalespersonPerson")]
    public virtual ICollection<Invoice> InvoiceSalespersonPeople { get; set; } = new List<Invoice>();

    [ForeignKey("LastEditedBy")]
    [InverseProperty("InverseLastEditedByNavigation")]
    public virtual Person LastEditedByNavigation { get; set; }

    [InverseProperty("ContactPerson")]
    public virtual ICollection<Order> OrderContactPeople { get; set; } = new List<Order>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<Order> OrderLastEditedByNavigations { get; set; } = new List<Order>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<OrderLine> OrderLines { get; set; } = new List<OrderLine>();

    [InverseProperty("PickedByPerson")]
    public virtual ICollection<Order> OrderPickedByPeople { get; set; } = new List<Order>();

    [InverseProperty("SalespersonPerson")]
    public virtual ICollection<Order> OrderSalespersonPeople { get; set; } = new List<Order>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<PackageType> PackageTypes { get; set; } = new List<PackageType>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<PaymentMethod> PaymentMethods { get; set; } = new List<PaymentMethod>();

    [InverseProperty("ContactPerson")]
    public virtual ICollection<PurchaseOrder> PurchaseOrderContactPeople { get; set; } = new List<PurchaseOrder>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<PurchaseOrder> PurchaseOrderLastEditedByNavigations { get; set; } = new List<PurchaseOrder>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<PurchaseOrderLine> PurchaseOrderLines { get; set; } = new List<PurchaseOrderLine>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<SpecialDeal> SpecialDeals { get; set; } = new List<SpecialDeal>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<StateProvince> StateProvinces { get; set; } = new List<StateProvince>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<StockGroup> StockGroups { get; set; } = new List<StockGroup>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<StockItemHolding> StockItemHoldings { get; set; } = new List<StockItemHolding>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<StockItemStockGroup> StockItemStockGroups { get; set; } = new List<StockItemStockGroup>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<StockItemTransaction> StockItemTransactions { get; set; } = new List<StockItemTransaction>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<StockItem> StockItems { get; set; } = new List<StockItem>();

    [InverseProperty("AlternateContactPerson")]
    public virtual ICollection<Supplier> SupplierAlternateContactPeople { get; set; } = new List<Supplier>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<SupplierCategory> SupplierCategories { get; set; } = new List<SupplierCategory>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<Supplier> SupplierLastEditedByNavigations { get; set; } = new List<Supplier>();

    [InverseProperty("PrimaryContactPerson")]
    public virtual ICollection<Supplier> SupplierPrimaryContactPeople { get; set; } = new List<Supplier>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<SupplierTransaction> SupplierTransactions { get; set; } = new List<SupplierTransaction>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<SystemParameter> SystemParameters { get; set; } = new List<SystemParameter>();

    [InverseProperty("LastEditedByNavigation")]
    public virtual ICollection<TransactionType> TransactionTypes { get; set; } = new List<TransactionType>();
}
