// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DataUpdateMethods.Models;

[Table("Invoices", Schema = "Sales")]
[Index("AccountsPersonId", Name = "FK_Sales_Invoices_AccountsPersonID")]
[Index("BillToCustomerId", Name = "FK_Sales_Invoices_BillToCustomerID")]
[Index("ContactPersonId", Name = "FK_Sales_Invoices_ContactPersonID")]
[Index("CustomerId", Name = "FK_Sales_Invoices_CustomerID")]
[Index("DeliveryMethodId", Name = "FK_Sales_Invoices_DeliveryMethodID")]
[Index("OrderId", Name = "FK_Sales_Invoices_OrderID")]
[Index("PackedByPersonId", Name = "FK_Sales_Invoices_PackedByPersonID")]
[Index("SalespersonPersonId", Name = "FK_Sales_Invoices_SalespersonPersonID")]
[Index("ConfirmedDeliveryTime", Name = "IX_Sales_Invoices_ConfirmedDeliveryTime")]
public partial class Invoice
{
    [Key]
    [Column("InvoiceID")]
    public int InvoiceId { get; set; }

    [Column("CustomerID")]
    public int CustomerId { get; set; }

    [Column("BillToCustomerID")]
    public int BillToCustomerId { get; set; }

    [Column("OrderID")]
    public int? OrderId { get; set; }

    [Column("DeliveryMethodID")]
    public int DeliveryMethodId { get; set; }

    [Column("ContactPersonID")]
    public int ContactPersonId { get; set; }

    [Column("AccountsPersonID")]
    public int AccountsPersonId { get; set; }

    [Column("SalespersonPersonID")]
    public int SalespersonPersonId { get; set; }

    [Column("PackedByPersonID")]
    public int PackedByPersonId { get; set; }

    [Column(TypeName = "date")]
    public DateTime InvoiceDate { get; set; }

    [StringLength(20)]
    public string CustomerPurchaseOrderNumber { get; set; }

    public bool IsCreditNote { get; set; }

    public string CreditNoteReason { get; set; }

    public string Comments { get; set; }

    public string DeliveryInstructions { get; set; }

    public string InternalComments { get; set; }

    public int TotalDryItems { get; set; }

    public int TotalChillerItems { get; set; }

    [StringLength(5)]
    public string DeliveryRun { get; set; }

    [StringLength(5)]
    public string RunPosition { get; set; }

    public string ReturnedDeliveryData { get; set; }

    public DateTime? ConfirmedDeliveryTime { get; set; }

    [StringLength(4000)]
    public string ConfirmedReceivedBy { get; set; }

    public int LastEditedBy { get; set; }

    public DateTime LastEditedWhen { get; set; }

    [ForeignKey("AccountsPersonId")]
    [InverseProperty("InvoiceAccountsPeople")]
    public virtual Person AccountsPerson { get; set; }

    [ForeignKey("BillToCustomerId")]
    [InverseProperty("InvoiceBillToCustomers")]
    public virtual Customer BillToCustomer { get; set; }

    [ForeignKey("ContactPersonId")]
    [InverseProperty("InvoiceContactPeople")]
    public virtual Person ContactPerson { get; set; }

    [ForeignKey("CustomerId")]
    [InverseProperty("InvoiceCustomers")]
    public virtual Customer Customer { get; set; }

    [InverseProperty("Invoice")]
    public virtual ICollection<CustomerTransaction> CustomerTransactions { get; set; } = new List<CustomerTransaction>();

    [ForeignKey("DeliveryMethodId")]
    [InverseProperty("Invoices")]
    public virtual DeliveryMethod DeliveryMethod { get; set; }

    [InverseProperty("Invoice")]
    public virtual ICollection<InvoiceLine> InvoiceLines { get; set; } = new List<InvoiceLine>();

    [ForeignKey("LastEditedBy")]
    [InverseProperty("InvoiceLastEditedByNavigations")]
    public virtual Person LastEditedByNavigation { get; set; }

    [ForeignKey("OrderId")]
    [InverseProperty("Invoices")]
    public virtual Order Order { get; set; }

    [ForeignKey("PackedByPersonId")]
    [InverseProperty("InvoicePackedByPeople")]
    public virtual Person PackedByPerson { get; set; }

    [ForeignKey("SalespersonPersonId")]
    [InverseProperty("InvoiceSalespersonPeople")]
    public virtual Person SalespersonPerson { get; set; }

    [InverseProperty("Invoice")]
    public virtual ICollection<StockItemTransaction> StockItemTransactions { get; set; } = new List<StockItemTransaction>();
}