// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DataUpdateMethods.Models;

[Table("Customers", Schema = "Sales")]
[Index("AlternateContactPersonId", Name = "FK_Sales_Customers_AlternateContactPersonID")]
[Index("BuyingGroupId", Name = "FK_Sales_Customers_BuyingGroupID")]
[Index("CustomerCategoryId", Name = "FK_Sales_Customers_CustomerCategoryID")]
[Index("DeliveryCityId", Name = "FK_Sales_Customers_DeliveryCityID")]
[Index("DeliveryMethodId", Name = "FK_Sales_Customers_DeliveryMethodID")]
[Index("PostalCityId", Name = "FK_Sales_Customers_PostalCityID")]
[Index("PrimaryContactPersonId", Name = "FK_Sales_Customers_PrimaryContactPersonID")]
[Index("IsOnCreditHold", "CustomerId", "BillToCustomerId", Name = "IX_Sales_Customers_Perf_20160301_06")]
[Index("CustomerName", Name = "UQ_Sales_Customers_CustomerName", IsUnique = true)]
public partial class Customer
{
    [Key]
    [Column("CustomerID")]
    public int CustomerId { get; set; }

    [Required]
    [StringLength(100)]
    public string CustomerName { get; set; }

    [Column("BillToCustomerID")]
    public int BillToCustomerId { get; set; }

    [Column("CustomerCategoryID")]
    public int CustomerCategoryId { get; set; }

    [Column("BuyingGroupID")]
    public int? BuyingGroupId { get; set; }

    [Column("PrimaryContactPersonID")]
    public int PrimaryContactPersonId { get; set; }

    [Column("AlternateContactPersonID")]
    public int? AlternateContactPersonId { get; set; }

    [Column("DeliveryMethodID")]
    public int DeliveryMethodId { get; set; }

    [Column("DeliveryCityID")]
    public int DeliveryCityId { get; set; }

    [Column("PostalCityID")]
    public int PostalCityId { get; set; }

    [Column(TypeName = "decimal(18, 2)")]
    public decimal? CreditLimit { get; set; }

    [Column(TypeName = "date")]
    public DateTime AccountOpenedDate { get; set; }

    [Column(TypeName = "decimal(18, 3)")]
    public decimal StandardDiscountPercentage { get; set; }

    public bool IsStatementSent { get; set; }

    public bool IsOnCreditHold { get; set; }

    public int PaymentDays { get; set; }

    [Required]
    [StringLength(20)]
    public string PhoneNumber { get; set; }

    [Required]
    [StringLength(20)]
    public string FaxNumber { get; set; }

    [StringLength(5)]
    public string DeliveryRun { get; set; }

    [StringLength(5)]
    public string RunPosition { get; set; }

    [Required]
    [Column("WebsiteURL")]
    [StringLength(256)]
    public string WebsiteUrl { get; set; }

    [Required]
    [StringLength(60)]
    public string DeliveryAddressLine1 { get; set; }

    [StringLength(60)]
    public string DeliveryAddressLine2 { get; set; }

    [Required]
    [StringLength(10)]
    public string DeliveryPostalCode { get; set; }

    [Required]
    [StringLength(60)]
    public string PostalAddressLine1 { get; set; }

    [StringLength(60)]
    public string PostalAddressLine2 { get; set; }

    [Required]
    [StringLength(10)]
    public string PostalPostalCode { get; set; }

    public int LastEditedBy { get; set; }

    [ForeignKey("AlternateContactPersonId")]
    [InverseProperty("CustomerAlternateContactPeople")]
    public virtual Person AlternateContactPerson { get; set; }

    [ForeignKey("BillToCustomerId")]
    [InverseProperty("InverseBillToCustomer")]
    public virtual Customer BillToCustomer { get; set; }

    [ForeignKey("BuyingGroupId")]
    [InverseProperty("Customers")]
    public virtual BuyingGroup BuyingGroup { get; set; }

    [ForeignKey("CustomerCategoryId")]
    [InverseProperty("Customers")]
    public virtual CustomerCategory CustomerCategory { get; set; }

    [InverseProperty("Customer")]
    public virtual ICollection<CustomerTransaction> CustomerTransactions { get; set; } = new List<CustomerTransaction>();

    [ForeignKey("DeliveryCityId")]
    [InverseProperty("CustomerDeliveryCities")]
    public virtual City DeliveryCity { get; set; }

    [ForeignKey("DeliveryMethodId")]
    [InverseProperty("Customers")]
    public virtual DeliveryMethod DeliveryMethod { get; set; }

    [InverseProperty("BillToCustomer")]
    public virtual ICollection<Customer> InverseBillToCustomer { get; set; } = new List<Customer>();

    [InverseProperty("BillToCustomer")]
    public virtual ICollection<Invoice> InvoiceBillToCustomers { get; set; } = new List<Invoice>();

    [InverseProperty("Customer")]
    public virtual ICollection<Invoice> InvoiceCustomers { get; set; } = new List<Invoice>();

    [ForeignKey("LastEditedBy")]
    [InverseProperty("CustomerLastEditedByNavigations")]
    public virtual Person LastEditedByNavigation { get; set; }

    [InverseProperty("Customer")]
    public virtual ICollection<Order> Orders { get; set; } = new List<Order>();

    [ForeignKey("PostalCityId")]
    [InverseProperty("CustomerPostalCities")]
    public virtual City PostalCity { get; set; }

    [ForeignKey("PrimaryContactPersonId")]
    [InverseProperty("CustomerPrimaryContactPeople")]
    public virtual Person PrimaryContactPerson { get; set; }

    [InverseProperty("Customer")]
    public virtual ICollection<SpecialDeal> SpecialDeals { get; set; } = new List<SpecialDeal>();

    [InverseProperty("Customer")]
    public virtual ICollection<StockItemTransaction> StockItemTransactions { get; set; } = new List<StockItemTransaction>();
}